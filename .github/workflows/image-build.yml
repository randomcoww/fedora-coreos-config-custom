name: Image Build
on:
  workflow_dispatch:

env:
  # This needs to match releasever
  FEDORA_VERSION: 41

jobs:
  build:
    runs-on: arc-runner-${{ github.event.repository.name }}
    container:
      image: quay.io/coreos-assembler/coreos-assembler:latest
    permissions:
      contents: write
    steps:
    - name: Set tag
      run: |
        echo "BUILD_TAG=${FEDORA_VERSION}.$(date -u +'%Y%m%d.%H')" | sudo tee -a "$GITHUB_ENV"

    - name: Install dependencies
      run: |
        cd $HOME
        sudo dnf install -y --setopt=install_weak_deps=False \
          rpmdevtools \
          dnf-plugins-core \
          libnftnl-devel

        TARGETARCH=$(arch)
        TARGETARCH=${TARGETARCH/x86_64/amd64} && TARGETARCH=${TARGETARCH/aarch64/arm64}

        curl https://dl.min.io/client/mc/release/linux-$TARGETARCH/mc \
          --create-dirs -o mc
        chmod +x mc

    - name: Build keepalived package
      run: |
        cd $HOME
        mkdir -p rpmbuild/
        cd rpmbuild
        git clone --depth 1 -b f$FEDORA_VERSION https://src.fedoraproject.org/rpms/keepalived.git SOURCES/
        cd SOURCES
        spectool -gR keepalived.spec
        sudo dnf builddep -y keepalived.spec
        rpmbuild -bb keepalived.spec \
          --without snmp \
          --with nftables \
          --without debug

        cd $HOME
        mkdir -p overrides/rpm
        cp -r rpmbuild/RPMS/$(arch)/. overrides/rpm/

    - name: Build image
      env:
        VARIANT: coreos
        COSA_SUPERMIN_MEMORY: 4096
      run: |
        cd $HOME
        cosa init -V $VARIANT \
          --force ${{ github.server_url }}/${{ github.repository }}.git

        cat > src/config/override.yaml <<EOF
        releasever: $FEDORA_VERSION
        EOF

        cosa fetch --with-cosa-overrides
        cosa build \
          --version=$BUILD_TAG metal4k
        cosa buildextend-metal
        cosa buildextend-live

    - name: Push image
      run: |
        cd $HOME
        ./mc cp -r -q --no-color \
          builds/latest/x86_64/fedora-*-live* \
          arc/data-boot/

    - name: Create tag
      run: |
        cd $HOME/src/config
        echo "${{ github.actor }}"

        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git config --global user.name "${{ github.actor }}"
        git tag -a $BUILD_TAG -m "Build $BUILD_TAG"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git push origin $BUILD_TAG
