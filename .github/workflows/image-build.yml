name: Image build
on:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  VARIANT: custom
  COSA_SUPERMIN_MEMORY: 4096

jobs:
  build:
    env:
      TAGS_KEEP: 4
    runs-on: builder-${{ github.event.repository.name }}
    container:
      image: reg.cluster.internal/randomcoww/coreos-assembler:latest
    permissions:
      contents: write
    steps:
    - name: Setup MinIO
      run: |
        set -e
        cd $HOME
        TARGETARCH=$(arch)
        TARGETARCH=${TARGETARCH/x86_64/amd64} && TARGETARCH=${TARGETARCH/aarch64/arm64}

        curl -fsSL -O https://dl.min.io/client/mc/release/linux-$TARGETARCH/mc
        chmod +x mc
        mkdir -p .mc/certs/CAs
        echo -e "$INTERNAL_CA_CERT" > .mc/certs/CAs/ca.crt

    - name: Prepare repo
      run: |
        cd $HOME
        git clone --depth=1 --shallow-submodules --recurse-submodules ${{ github.server_url }}/${{ github.repository }}.git repo

        cd repo/fedora-coreos-config
        FEDORA_VERSION=$(cat manifest.yaml | grep releasever: | sed 's/^releasever: //')
        echo "FEDORA_VERSION=$FEDORA_VERSION" | sudo tee -a "$GITHUB_ENV"
        echo "BUILD_TAG=${FEDORA_VERSION}.$(date -u +'%Y%m%d.%H')" | sudo tee -a "$GITHUB_ENV"

        cp ../*.repo .
        cp ../manifest-$VARIANT.yaml .
        cp ../image-$VARIANT.yaml .
        mkdir -p overlay.d/40custom/etc/pki/ca-trust/source/anchors
        echo -e "$INTERNAL_CA_CERT" > overlay.d/40custom/etc/pki/ca-trust/source/anchors/ca-cert.pem

    - name: Build keepalived package
      run: |
        cd $HOME
        sudo dnf install -y --setopt=install_weak_deps=False \
          rpmdevtools \
          dnf-plugins-core \
          libnftnl-devel \
          unzip

        mkdir -p rpmbuild/
        cd rpmbuild
        git clone --depth 1 -b f$FEDORA_VERSION https://src.fedoraproject.org/rpms/keepalived.git SOURCES/
        cd SOURCES
        spectool -gR keepalived.spec
        sudo dnf builddep -y keepalived.spec
        rpmbuild -bb keepalived.spec \
          --without snmp \
          --with nftables \
          --without debug

    - name: Run init
      run: |
        mkdir -p $HOME/build
        cd $HOME/build

        mkdir -p overrides/rpm
        cp -r $HOME/rpmbuild/RPMS/$(arch)/. overrides/rpm/

        cosa init -V $VARIANT \
          --force $HOME/repo/fedora-coreos-config

    - name: Run fetch
      run: |
        cd $HOME/build
        cosa fetch --with-cosa-overrides

    - name: Run build
      run: |
        cd $HOME/build
        cosa build --version=$BUILD_TAG

    - name: Run buildextend-metal4k
      run: |
        cd $HOME/build
        cosa buildextend-metal4k

    - name: Run buildextend-metal
      run: |
        cd $HOME/build
        cosa buildextend-metal

    - name: Run buildextend-live
      run: |
        cd $HOME/build
        cosa buildextend-live

    - name: Push image
      run: |
        cd $HOME
        ./mc cp -r -q --no-color \
          build/builds/latest/$(arch)/fedora-*-live* arc/boot/

    - name: Create tag
      run: |
        cd $HOME/repo
        git config --global user.email "${{ github.actor }}@users.noreply.github.com"
        git config --global user.name "${{ github.actor }}"
        git tag -a $BUILD_TAG -m "Build $BUILD_TAG"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        git push origin $BUILD_TAG

    - name: Remove old images
      run: |
        cd $HOME
        tags=$(./mc ls --json --no-color arc/boot/fedora-coreos- | jq -r '.key' | sed -r 's/fedora-coreos-(.*)-live-.*$/\1/' | sort -u | head -n -$TAGS_KEEP)
        for tag in $tags; do
          ./mc rm -r -q --no-color --force arc/boot/fedora-coreos-$tag
        done